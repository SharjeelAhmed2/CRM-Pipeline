{"version":3,"file":"content.js","mappings":";;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://gmail-crm-extension/./src/content.tsx"],"sourcesContent":["\"use strict\";\n// src/content.tsx\nconsole.log('Content script starting...');\nvar GMAIL_URL_PATTERN = 'https://mail.google.com';\nfunction observeGmailInbox() {\n    // Gmail's main content area usually has role=\"main\"\n    var targetNode = document.querySelector('[role=\"main\"]');\n    if (!targetNode) {\n        console.log('Gmail main content area not found, retrying...');\n        setTimeout(observeGmailInbox, 1000);\n        return;\n    }\n    console.log('Found Gmail main content area, setting up observer');\n    // A MutationObserver is created to monitor changes in the DOM (Document Object Model) of the targetNode.\n    var observer = new MutationObserver(function (mutations) {\n        mutations.forEach(function (mutation) {\n            // Look for email rows\n            var emailRows = document.querySelectorAll('tr[role=\"row\"]');\n            if (emailRows.length > 0) {\n                console.log('Emails found:', emailRows.length);\n                // We'll process these emails later\n            }\n        });\n    });\n    //Changes in child elements (childList: true).\n    //Changes deep within the DOM tree (subtree: true).\n    observer.observe(targetNode, {\n        childList: true,\n        subtree: true\n    });\n}\nvar init = function () {\n    if (!window.location.origin.includes(GMAIL_URL_PATTERN)) {\n        return;\n    }\n    console.log('Gmail detected, starting observer');\n    observeGmailInbox();\n};\n// Start when page loads\nwindow.addEventListener('load', init);\n"],"names":[],"sourceRoot":""}
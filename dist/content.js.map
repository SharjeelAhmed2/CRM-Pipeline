{"version":3,"file":"content.js","mappings":";;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA,MAAM,yCAAyC;AAC/C,MAAM,4CAA4C;AAClD,MAAM,4CAA4C;AAClD,MAAM;AACN;AACA;AACA;AACA;AACA,4DAA4D,wBAAwB,4BAA4B,yDAAyD,6BAA6B,gDAAgD,0BAA0B,+BAA+B;AAC/S,gEAAgE,gCAAgC,oBAAoB;AACpH;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB,iBAAiB,uBAAuB,wBAAwB,8BAA8B,iDAAiD,wBAAwB,wBAAwB,2BAA2B;AACpS;AACA;AACA;AACA,gDAAgD,mBAAmB,eAAe;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iEAAiE,+BAA+B,sCAAsC,+BAA+B,+BAA+B,qCAAqC,kCAAkC,mCAAmC;AAC9S;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://gmail-crm-extension/./src/content.tsx"],"sourcesContent":["\"use strict\";\n// src/content.tsx\nconsole.log('Content script starting...');\nvar GMAIL_URL_PATTERN = 'https://mail.google.com';\n// Default stages\nvar defaultStages = [\n    { id: '1', name: 'Lead', color: '#718096' },\n    { id: '2', name: 'Pitched', color: '#4299E1' },\n    { id: '3', name: 'Waiting', color: '#9F7AEA' },\n    { id: '4', name: 'Closed', color: '#48BB78' }\n];\nfunction createStageElement(stage) {\n    var stageDiv = document.createElement('div');\n    stageDiv.className = 'pipeline-stage';\n    stageDiv.style.cssText = \"\\n        margin-bottom: 10px;\\n        padding: 10px;\\n        background: white;\\n        border-left: 4px solid \".concat(stage.color, \";\\n        border-radius: 4px;\\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\\n        cursor: pointer;\\n        transition: all 0.2s;\\n    \");\n    stageDiv.innerHTML = \"\\n        <div style=\\\"display: flex; justify-content: space-between; align-items: center;\\\">\\n            <span>\".concat(stage.name, \"</span>\\n            <span class=\\\"stage-count\\\">0</span>\\n        </div>\\n    \");\n    stageDiv.addEventListener('mouseover', function () {\n        stageDiv.style.backgroundColor = '#f7fafc';\n    });\n    stageDiv.addEventListener('mouseout', function () {\n        stageDiv.style.backgroundColor = 'white';\n    });\n    return stageDiv;\n}\n/// For Add Stage Button Functionality \n// For Sidebar\nfunction createSidebar() {\n    var sidebar = document.createElement('div');\n    sidebar.id = 'gmail-crm-sidebar';\n    sidebar.style.cssText = \"\\n        position: fixed;\\n        right: 0;\\n        top: 0;\\n        width: 250px;\\n        height: 100vh;\\n        background: #f8fafc;\\n        box-shadow: -2px 0 5px rgba(0,0,0,0.1);\\n        z-index: 1000;\\n        padding: 20px;\\n        overflow-y: auto;\\n    \";\n    // Add title\n    var title = document.createElement('h2');\n    title.textContent = 'CRM Pipeline';\n    title.style.cssText = 'margin-bottom: 15px; font-weight: bold; color: #2d3748;';\n    sidebar.appendChild(title);\n    //Stages Work\n    // Get stages from storage or use defaults\n    //This is Chrome's storage API that syncs data across user's browsers\n    chrome.storage.sync.get(['pipelineStages'], function (result) {\n        var stages = result.pipelineStages || defaultStages;\n        // Create stages container\n        var stagesContainer = document.createElement('div');\n        stagesContainer.id = 'pipeline-stages';\n        // stages.forEach(stage => {\n        //     stagesContainer.appendChild(createStageElement(stage));\n        // });\n        // Explicitly type the stage parameter\n        stages.forEach(function (stage) {\n            stagesContainer.appendChild(createStageElement(stage));\n        });\n        sidebar.appendChild(stagesContainer);\n        // Add \"Add Stage\" button\n        var addButton = document.createElement('button');\n        addButton.textContent = '+ Add Stage';\n        addButton.style.cssText = \"\\n                width: 100%;\\n                padding: 8px;\\n                background: #4299E1;\\n                color: white;\\n                border: none;\\n                border-radius: 4px;\\n                cursor: pointer;\\n                margin-top: 10px;\\n            \";\n        sidebar.appendChild(addButton);\n    });\n    // Add to page\n    document.body.appendChild(sidebar);\n    // Adjust Gmail's main content\n    var gmailContent = document.querySelector('.bkK');\n    if (gmailContent) {\n        gmailContent.style.marginRight = '250px';\n    }\n}\nfunction observeGmailInbox() {\n    // Gmail's main content area usually has role=\"main\"\n    var targetNode = document.querySelector('[role=\"main\"]');\n    if (!targetNode) {\n        console.log('Gmail main content area not found, retrying...');\n        setTimeout(observeGmailInbox, 1000);\n        return;\n    }\n    console.log('Found Gmail main content area, setting up observer');\n    createSidebar(); // Add sidebar when we find the main content\n    // A MutationObserver is created to monitor changes in the DOM (Document Object Model) of the targetNode.\n    var observer = new MutationObserver(function (mutations) {\n        mutations.forEach(function (mutation) {\n            // Look for email rows\n            var emailRows = document.querySelectorAll('tr[role=\"row\"]');\n            if (emailRows.length > 0) {\n                console.log('Emails found:', emailRows.length);\n                // We'll process these emails later\n            }\n        });\n    });\n    //Changes in child elements (childList: true).\n    //Changes deep within the DOM tree (subtree: true).\n    observer.observe(targetNode, {\n        childList: true,\n        subtree: true\n    });\n}\nvar init = function () {\n    if (!window.location.origin.includes(GMAIL_URL_PATTERN)) {\n        return;\n    }\n    console.log('Gmail detected, starting observer');\n    observeGmailInbox();\n};\n// Start when page loads\nwindow.addEventListener('load', init);\n"],"names":[],"sourceRoot":""}
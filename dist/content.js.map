{"version":3,"file":"content.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,6IAA6I,cAAc;AAC3J,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA,6EAA6E,OAAO;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yCAAyC;AAC/C,MAAM,4CAA4C;AAClD,MAAM,4CAA4C;AAClD,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,4BAA4B,6BAA6B,gDAAgD;AACrK;AACA;AACA,uDAAuD,wBAAwB,yCAAyC,8BAA8B,yDAAyD,6BAA6B,4BAA4B;AACxQ,iEAAiE,qBAAqB,SAAS,sMAAsM,2BAA2B,6BAA6B,8BAA8B,8BAA8B,6BAA6B;AACtb;AACA;AACA;AACA,4DAA4D,0BAA0B,wBAAwB,iCAAiC,mBAAmB;AAClK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,2BAA2B;AACnG,0CAA0C,+BAA+B;AACzE;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,qDAAqD,mBAAmB,oBAAoB,2CAA2C,4BAA4B,wBAAwB,6BAA6B,iDAAiD,yBAAyB,uBAAuB;AACzT;AACA,uDAAuD,iBAAiB,kBAAkB,mBAAmB,oBAAoB,sCAAsC,yBAAyB;AAChM;AACA,iEAAiE,kBAAkB,gEAAgE,wHAAwH,+BAA+B,4CAA4C,qCAAqC,sCAAsC,+HAA+H,+BAA+B,4CAA4C,qCAAqC,uEAAuE,UAAU,2EAA2E,+BAA+B,sCAAsC,+BAA+B,+BAA+B,qCAAqC,kCAAkC,sHAAsH,+BAA+B,sCAAsC,+BAA+B,+BAA+B,qCAAqC,kCAAkC;AACtzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,mBAAmB,iBAAiB,uBAAuB,uBAAuB,8BAA8B,iDAAiD,wBAAwB,wBAAwB,iCAAiC,4BAA4B;AACrV;AACA,gFAAgF,2CAA2C,4BAA4B,yBAAyB;AAChL;AACA;AACA,sDAAsD,mBAAmB,gBAAgB,gBAAgB;AACzG;AACA;AACA;AACA,sEAAsE,2BAA2B,wBAAwB,uCAAuC;AAChK;AACA;AACA,6EAA6E,iCAAiC,oBAAoB;AAClI;AACA;AACA;AACA,gFAAgF,wCAAwC,4BAA4B,yBAAyB;AAC7K;AACA;AACA,qEAAqE,uBAAuB,8BAA8B,uBAAuB,uBAAuB,6BAA6B,0BAA0B,0BAA0B,2BAA2B,4CAA4C,mBAAmB,kCAAkC,WAAW;AAChY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,8BAA8B,8BAA8B,4BAA4B,kCAAkC,+CAA+C,+BAA+B;AACxR;AACA;AACA;AACA;AACA,sFAAsF,gEAAgE,mEAAmE,iBAAiB;AAC1O,gFAAgF,iBAAiB,cAAc,kBAAkB,iBAAiB,YAAY,iBAAiB;AAC/K,uFAAuF,iBAAiB;AACxG,gFAAgF,iBAAiB,cAAc,kBAAkB,iBAAiB,YAAY,iBAAiB;AAC/K,+FAA+F,mBAAmB,eAAe;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,2BAA2B,2BAA2B,+BAA+B,iCAAiC,8BAA8B,8BAA8B,gCAAgC,iCAAiC,4BAA4B,oCAAoC,yBAAyB;AAC9Y;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gCAAgC,gCAAgC,4BAA4B,6BAA6B,iDAAiD,uBAAuB,yBAAyB;AAC/Q;AACA;AACA;AACA;AACA;AACA,wEAAwE,kCAAkC,iEAAiE,gCAAgC;AAC3M;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,+BAA+B;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;UErtBA;UACA;UACA;UACA;UACA","sources":["webpack://gmail-crm-extension/./src/content.tsx","webpack://gmail-crm-extension/webpack/before-startup","webpack://gmail-crm-extension/webpack/startup","webpack://gmail-crm-extension/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n// src/content.tsx\nconsole.log('Content script starting...');\nvar GMAIL_URL_PATTERN = 'https://mail.google.com';\n// Default stages\nvar defaultStages = [\n    { id: '1', name: 'Lead', color: '#718096' },\n    { id: '2', name: 'Pitched', color: '#4299E1' },\n    { id: '3', name: 'Waiting', color: '#9F7AEA' },\n    { id: '4', name: 'Closed', color: '#48BB78' }\n];\n// To maintain multiple reloads \nvar observerState = {\n    isInitialized: false,\n    sidebarCreated: false\n};\n// Storage utility functions\n// Create the StorageUtils object with all storage-related functions\nvar StorageUtils = {\n    // Save email to stage function\n    saveEmailToStage: function (emailData, stageId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var key, result, emails, error_1;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 3, , 4]);\n                        key = \"stage_\".concat(stageId);\n                        return [4 /*yield*/, chrome.storage.local.get([key])];\n                    case 1:\n                        result = _b.sent();\n                        emails = result[key] || [];\n                        emails.push(emailData);\n                        if (emails.length > 50) {\n                            emails = emails.slice(-50);\n                        }\n                        return [4 /*yield*/, chrome.storage.local.set((_a = {}, _a[key] = emails, _a))];\n                    case 2:\n                        _b.sent();\n                        return [2 /*return*/, true];\n                    case 3:\n                        error_1 = _b.sent();\n                        console.error('Error saving email:', error_1);\n                        return [2 /*return*/, false];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    },\n    // Load emails for a stage function\n    loadStageEmails: function (stageId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var key, result, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        key = \"stage_\".concat(stageId);\n                        return [4 /*yield*/, chrome.storage.local.get([key])];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result[key] || []];\n                    case 2:\n                        error_2 = _a.sent();\n                        console.error('Error loading emails:', error_2);\n                        return [2 /*return*/, []];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    }\n};\n// Compress email data before storage\nfunction compressEmailData(email) {\n    return {\n        i: email.id,\n        s: email.subject.substring(0, 100), // Limit subject length\n        f: email.sender.substring(0, 50), // Limit sender length\n        t: email.timestamp\n    };\n}\n// Decompress email data for display\nfunction decompressEmailData(stored) {\n    return {\n        id: stored.i,\n        subject: stored.s,\n        sender: stored.f,\n        timestamp: stored.t\n    };\n}\n// Update the createStageElement function to match your UI\nfunction createStageElement(stage) {\n    var stageDiv = document.createElement('div');\n    stageDiv.className = 'pipeline-stage';\n    stageDiv.setAttribute('data-stage-id', stage.id);\n    stageDiv.style.cssText = \"\\n        margin-bottom: 10px;\\n        background: white;\\n        border-radius: 4px;\\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\\n    \";\n    // Create the header with your existing UI structure\n    var headerDiv = document.createElement('div');\n    headerDiv.style.cssText = \"\\n        padding: 10px;\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center;\\n        border-left: 4px solid \".concat(stage.color, \";\\n        border-radius: 4px;\\n        background: white;\\n    \");\n    headerDiv.innerHTML = \"\\n        <div style=\\\"display: flex; align-items: center; gap: 8px;\\\">\\n            <span>\".concat(stage.name, \"</span>\\n            <span class=\\\"stage-count\\\">0</span>\\n        </div>\\n        <button class=\\\"delete-stage\\\" style=\\\"\\n            background: none;\\n            border: none;\\n            color: #ff4444;\\n            cursor: pointer;\\n            font-size: 18px;\\n            padding: 0 4px;\\n        \\\">\\u00D7</button>\\n    \");\n    // Create a container for emails that will appear below the header\n    var emailsContainer = document.createElement('div');\n    emailsContainer.className = 'stage-emails-container';\n    emailsContainer.style.cssText = \"\\n        padding: 8px;\\n        margin-top: 4px;\\n        display: flex;\\n        flex-direction: column;\\n        gap: 8px;\\n    \";\n    stageDiv.appendChild(headerDiv);\n    stageDiv.appendChild(emailsContainer);\n    // Add existing delete functionality\n    var deleteBtn = headerDiv.querySelector('.delete-stage');\n    deleteBtn === null || deleteBtn === void 0 ? void 0 : deleteBtn.addEventListener('click', function (e) {\n        e.stopPropagation();\n        if (confirm(\"Are you sure you want to delete \\\"\".concat(stage.name, \"\\\" stage?\"))) {\n            chrome.storage.sync.get(['pipelineStages'], function (result) {\n                var currentStages = result.pipelineStages || defaultStages;\n                var updatedStages = currentStages.filter(function (s) { return s.id !== stage.id; });\n                chrome.storage.sync.set({ pipelineStages: updatedStages }, function () {\n                    stageDiv.remove();\n                });\n            });\n        }\n    });\n    return stageDiv;\n}\n/// For Add Stage Button Functionality \nfunction createAddStageForm() {\n    var modal = document.createElement('div');\n    modal.style.cssText = \"\\n        position: fixed;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%);\\n        background: white;\\n        padding: 20px;\\n        border-radius: 8px;\\n        box-shadow: 0 2px 10px rgba(0,0,0,0.1);\\n        z-index: 10001;\\n        width: 300px;\\n    \";\n    var overlay = document.createElement('div');\n    overlay.style.cssText = \"\\n        position: fixed;\\n        top: 0;\\n        left: 0;\\n        right: 0;\\n        bottom: 0;\\n        background: rgba(0,0,0,0.5);\\n        z-index: 10000;\\n    \";\n    var form = document.createElement('form');\n    form.innerHTML = \"\\n        <h3 style=\\\"margin-bottom: 15px; font-weight: bold;\\\">Add New Stage</h3>\\n        <div style=\\\"margin-bottom: 15px;\\\">\\n            <input type=\\\"text\\\" id=\\\"stageName\\\" placeholder=\\\"Stage Name\\\" style=\\\"\\n                width: 100%;\\n                padding: 8px;\\n                border: 1px solid #e2e8f0;\\n                border-radius: 4px;\\n                margin-bottom: 10px;\\n            \\\">\\n            <input type=\\\"color\\\" id=\\\"stageColor\\\" value=\\\"#718096\\\" style=\\\"\\n                width: 100%;\\n                height: 40px;\\n                border: 1px solid #e2e8f0;\\n                border-radius: 4px;\\n            \\\">\\n        </div>\\n        <div style=\\\"display: flex; gap: 10px;\\\">\\n            <button type=\\\"submit\\\" style=\\\"\\n                flex: 1;\\n                padding: 8px;\\n                background: #4299E1;\\n                color: white;\\n                border: none;\\n                border-radius: 4px;\\n                cursor: pointer;\\n            \\\">Add</button>\\n            <button type=\\\"button\\\" id=\\\"cancelBtn\\\" style=\\\"\\n                flex: 1;\\n                padding: 8px;\\n                background: #CBD5E0;\\n                color: white;\\n                border: none;\\n                border-radius: 4px;\\n                cursor: pointer;\\n            \\\">Cancel</button>\\n        </div>\\n    \";\n    modal.appendChild(form);\n    // Handle form submission \n    form.addEventListener('submit', function (e) {\n        e.preventDefault();\n        var nameInput = document.getElementById('stageName');\n        var colorInput = document.getElementById('stageColor');\n        var newStage = {\n            id: Date.now().toString(),\n            name: nameInput.value,\n            color: colorInput.value\n        };\n        // Get current stages and add new one\n        chrome.storage.sync.get(['pipelineStages'], function (result) {\n            var currentStages = result.pipelineStages || defaultStages;\n            var updatedStages = __spreadArray(__spreadArray([], currentStages, true), [newStage], false);\n            // Save updated stages\n            chrome.storage.sync.set({ pipelineStages: updatedStages }, function () {\n                // Add new stage to UI\n                var stagesContainer = document.getElementById('pipeline-stages');\n                if (stagesContainer) {\n                    stagesContainer.appendChild(createStageElement(newStage));\n                }\n                // Remove modal that we created when we clicked on Add Stage button\n                document.body.removeChild(modal);\n                document.body.removeChild(overlay);\n            });\n        });\n    });\n    // Handle cancel\n    var cancelBtn = form.querySelector('#cancelBtn');\n    cancelBtn === null || cancelBtn === void 0 ? void 0 : cancelBtn.addEventListener('click', function () {\n        document.body.removeChild(modal);\n        document.body.removeChild(overlay);\n    });\n    // Add modal and overlay to page\n    document.body.appendChild(overlay);\n    document.body.appendChild(modal);\n}\n// For Sidebar\nfunction createSidebar() {\n    return __awaiter(this, void 0, void 0, function () {\n        var sidebar, headerSection, title, contentSection, stagesContainer, footerSection, addButton, gmailContent;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    console.log('Creating sidebar');\n                    sidebar = document.createElement('div');\n                    sidebar.id = 'gmail-crm-sidebar';\n                    sidebar.style.cssText = \"\\n        position: fixed;\\n        right: 0;\\n        top: 0;\\n        width: 450px;\\n        height: 100%;\\n        background: #f8fafc;\\n        box-shadow: -2px 0 5px rgba(0,0,0,0.1);\\n        z-index: 1000;\\n        display: flex;\\n        flex-direction: column;\\n        overflow: hidden; /* Important: prevent double scrollbars */\\n    \";\n                    headerSection = document.createElement('div');\n                    headerSection.style.cssText = \"\\n        padding: 16px 20px;\\n        border-bottom: 1px solid #e5e7eb;\\n        background: white;\\n        flex-shrink: 0;\\n    \";\n                    title = document.createElement('h2');\n                    title.textContent = 'CRM Pipeline';\n                    title.style.cssText = 'margin: 0; font-weight: bold; color: #2d3748; font-size: 16px;';\n                    headerSection.appendChild(title);\n                    sidebar.appendChild(headerSection);\n                    contentSection = document.createElement('div');\n                    contentSection.style.cssText = \"\\n        flex: 1;\\n        overflow-y: auto;\\n        padding: 16px;\\n        height: calc(100vh - 120px); /* Account for header and footer */\\n    \";\n                    stagesContainer = document.createElement('div');\n                    stagesContainer.id = 'pipeline-stages';\n                    stagesContainer.style.cssText = \"\\n        display: flex;\\n        flex-direction: column;\\n        gap: 16px;\\n    \";\n                    contentSection.appendChild(stagesContainer);\n                    sidebar.appendChild(contentSection);\n                    footerSection = document.createElement('div');\n                    footerSection.style.cssText = \"\\n        padding: 16px 20px;\\n        border-top: 1px solid #e5e7eb;\\n        background: white;\\n        flex-shrink: 0;\\n    \";\n                    addButton = document.createElement('button');\n                    addButton.textContent = '+ Add Stage';\n                    addButton.style.cssText = \"\\n        width: 100%;\\n        padding: 8px;\\n        background: #4299E1;\\n        color: white;\\n        border: none;\\n        border-radius: 4px;\\n        cursor: pointer;\\n        font-size: 14px;\\n        font-weight: 500;\\n        transition: background-color 0.2s;\\n        &:hover {\\n            background: #3182ce;\\n        }\\n    \";\n                    addButton.addEventListener('click', createAddStageForm);\n                    footerSection.appendChild(addButton);\n                    sidebar.appendChild(footerSection);\n                    // Add to page\n                    document.body.appendChild(sidebar);\n                    gmailContent = document.querySelector('.bkK');\n                    if (gmailContent) {\n                        gmailContent.style.marginRight = '450px';\n                    }\n                    // Load stages from storage\n                    chrome.storage.sync.get(['pipelineStages'], function (result) {\n                        var stages = result.pipelineStages || defaultStages;\n                        stages.forEach(function (stage) {\n                            stagesContainer.appendChild(createStageElement(stage));\n                        });\n                    });\n                    return [4 /*yield*/, loadSavedEmails()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Add this new function to handle adding emails to stages\n// Update addEmailToStage function to match your UI\nfunction addEmailToStage(emailData, stage, stageDiv) {\n    return __awaiter(this, void 0, void 0, function () {\n        var saved, emailsContainer, existingEmailInUI, truncateText, emailDiv_1, sender_1, subjectText_1, timestamp, countElement, currentCount, error_3;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, StorageUtils.saveEmailToStage(emailData, stage.id)];\n                case 1:\n                    saved = _a.sent();\n                    if (!saved) {\n                        console.error('Failed to save email');\n                        return [2 /*return*/];\n                    }\n                    emailsContainer = stageDiv.querySelector('.stage-emails-container');\n                    if (!emailsContainer) {\n                        console.error('Emails container not found');\n                        return [2 /*return*/];\n                    }\n                    existingEmailInUI = emailsContainer.querySelector(\"[data-email-id=\\\"\".concat(emailData.id, \"\\\"]\"));\n                    if (existingEmailInUI) {\n                        console.log('Email already displayed in UI, skipping render');\n                        return [2 /*return*/];\n                    }\n                    truncateText = function (text, limit) {\n                        if (text.length <= limit)\n                            return text;\n                        return {\n                            short: text.substring(0, limit) + '...',\n                            full: text\n                        };\n                    };\n                    emailDiv_1 = document.createElement('div');\n                    emailDiv_1.className = 'pipeline-email';\n                    emailDiv_1.setAttribute('data-email-id', emailData.id);\n                    emailDiv_1.style.cssText = \"\\n            padding: 8px 16px;\\n            cursor: pointer;\\n            font-size: 13px;\\n            display: flex;\\n            align-items: center;\\n            border-bottom: 1px solid #E5E7EB;\\n            min-height: 40px;\\n        \";\n                    sender_1 = truncateText(emailData.sender.split('@')[0], 15);\n                    subjectText_1 = truncateText(emailData.subject, 30);\n                    timestamp = new Date(emailData.timestamp).toLocaleDateString();\n                    // Create the row content\n                    emailDiv_1.innerHTML = \"\\n            <div style=\\\"flex: 0 0 30px;\\\">\\n                <input type=\\\"checkbox\\\" style=\\\"margin: 0;\\\">\\n            </div>\\n            <div style=\\\"flex: 0 0 150px; overflow: hidden;\\\" class=\\\"sender-cell\\\">\\n                \".concat(typeof sender_1 === 'string' ? sender_1 : sender_1.short, \"\\n                \").concat(typeof sender_1 === 'object' ?\n                        \"<button class=\\\"see-more-btn\\\" style=\\\"color: #4299E1; font-size: 11px; border: none; background: none; cursor: pointer; padding: 0; margin-left: 4px;\\\">...</button>\"\n                        : '', \"\\n            </div>\\n            <div style=\\\"flex: 1; overflow: hidden;\\\" class=\\\"subject-cell\\\">\\n                \").concat(typeof subjectText_1 === 'string' ? subjectText_1 : subjectText_1.short, \"\\n                \").concat(typeof subjectText_1 === 'object' ?\n                        \"<button class=\\\"see-more-btn\\\" style=\\\"color: #4299E1; font-size: 11px; border: none; background: none; cursor: pointer; padding: 0; margin-left: 4px;\\\">...</button>\"\n                        : '', \"\\n            </div>\\n            <div style=\\\"flex: 0 0 100px; text-align: right; color: #6B7280;\\\">\\n                \").concat(timestamp, \"\\n            </div>\\n        \");\n                    // Add \"See More\" functionality\n                    emailDiv_1.querySelectorAll('.see-more-btn').forEach(function (btn) {\n                        btn.addEventListener('click', function (e) {\n                            e.stopPropagation();\n                            var cell = btn.parentElement;\n                            if (cell) {\n                                if (cell.classList.contains('sender-cell')) {\n                                    cell.textContent = typeof sender_1 === 'object' ? sender_1.full : sender_1;\n                                }\n                                else if (cell.classList.contains('subject-cell')) {\n                                    cell.textContent = typeof subjectText_1 === 'object' ? subjectText_1.full : subjectText_1;\n                                }\n                            }\n                        });\n                    });\n                    // Add hover effect\n                    emailDiv_1.addEventListener('mouseenter', function () {\n                        emailDiv_1.style.backgroundColor = '#F3F4F6';\n                    });\n                    emailDiv_1.addEventListener('mouseleave', function () {\n                        emailDiv_1.style.backgroundColor = 'transparent';\n                    });\n                    // Add to container\n                    emailsContainer.appendChild(emailDiv_1);\n                    countElement = stageDiv.querySelector('.stage-count');\n                    if (countElement) {\n                        currentCount = parseInt(countElement.textContent || '0');\n                        countElement.textContent = (currentCount + 1).toString();\n                    }\n                    return [3 /*break*/, 3];\n                case 2:\n                    error_3 = _a.sent();\n                    console.error('Error in addEmailToStage:', error_3);\n                    return [3 /*break*/, 3];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n// 5:11 AM on Friday the 10th \n// Add this function to save email data to storage\n// Update saveEmailToStage to include better error handling\n/// Email Dragable Function\n/*\nThe move button is now always created and positioned next to the checkbox\nThe button becomes visible on row hover instead of row selection\nAdded a simple icon (📋) to make it more compact\nAdded proper z-index to ensure the button stays above other elements\nAdded transition effects for smooth appearance/disappearance\nAdded checks to prevent duplicate buttons\nImproved the initialization tracking\n*/\n/**Simplified the selectors to better match Gmail's structure\nRemoved the opacity transition and hover effects (making buttons always visible)\nIncreased z-index to ensure buttons appear above Gmail's interface\nAdded more specific targeting for email elements\nAdded more debug logging\nFixed the observer logic\nAdded a delay after page load to ensure Gmail is fully initialized */\nfunction makeEmailDraggable(emailRow) {\n    // Verify this is actually an email row\n    if (!emailRow.classList.contains('zA')) {\n        console.log('Not an email row, skipping:', emailRow);\n        return;\n    }\n    // First, check if the button is already added\n    if (emailRow.querySelector('.crm-move-button')) {\n        return;\n    }\n    var moveButton = document.createElement('button');\n    moveButton.className = 'crm-move-button';\n    moveButton.innerHTML = '📋';\n    moveButton.title = 'Move to Pipeline';\n    moveButton.style.cssText = \"\\n            background: #4299E1;\\n            color: white;\\n            border: none;\\n            padding: 4px 8px;\\n            border-radius: 4px;\\n            font-size: 12px;\\n            cursor: pointer;\\n            margin-right: 8px;\\n            position: relative;\\n            z-index: 9999;\\n            display: inline-block;\\n            opacity: 1;\\n        \";\n    // Target the first TD which contains the checkbox\n    var firstCell = emailRow.querySelector('td:first-child');\n    if (firstCell) {\n        // Insert at the beginning of the cell\n        firstCell.insertBefore(moveButton, firstCell.firstChild);\n        console.log('Move button inserted into email row');\n    }\n    moveButton.addEventListener('click', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        console.log('Move button clicked');\n        var getEmailData = function () {\n            var _a, _b, _c, _d, _e, _f;\n            // Get all table cells in the row\n            var cells = emailRow.querySelectorAll('td');\n            // Find subject from the third cell typically\n            var subjectCell = Array.from(cells).find(function (cell) {\n                return cell.querySelector('[role=\"link\"]') ||\n                    cell.querySelector('.bog') ||\n                    cell.querySelector('.bqe');\n            });\n            var subject = (_a = subjectCell === null || subjectCell === void 0 ? void 0 : subjectCell.textContent) === null || _a === void 0 ? void 0 : _a.trim();\n            // Find sender from the relevant cell\n            // First try to find the email directly\n            var sender = (_b = emailRow.querySelector('[email]')) === null || _b === void 0 ? void 0 : _b.getAttribute('email');\n            if (!sender) {\n                // If no email attribute, try to get the sender name/email from text content\n                var senderCell = Array.from(cells).find(function (cell) {\n                    return cell.querySelector('.yP') || cell.querySelector('.bA4');\n                });\n                sender = (_c = senderCell === null || senderCell === void 0 ? void 0 : senderCell.textContent) === null || _c === void 0 ? void 0 : _c.trim();\n            }\n            // Find timestamp from the last cell\n            var lastCell = cells[cells.length - 1];\n            var timeElement = (lastCell === null || lastCell === void 0 ? void 0 : lastCell.querySelector('span[title]')) || lastCell;\n            var timestamp = (timeElement === null || timeElement === void 0 ? void 0 : timeElement.getAttribute('title')) ||\n                ((_d = timeElement === null || timeElement === void 0 ? void 0 : timeElement.textContent) === null || _d === void 0 ? void 0 : _d.trim());\n            console.log('Raw extracted values:', {\n                cells: cells.length,\n                subject: subject,\n                sender: sender,\n                timestamp: timestamp,\n                rowHTML: emailRow.innerHTML\n            });\n            // Clean up and validate the data\n            if (!subject || subject === '') {\n                console.log('Missing subject');\n                return null;\n            }\n            // Ensure we have some form of sender identification\n            if (!sender || sender === '') {\n                // Try to get any sender information from the row\n                var anyNameOrEmail = (_f = (_e = emailRow.textContent) === null || _e === void 0 ? void 0 : _e.match(/[\\w.-]+@[\\w.-]+\\.\\w+/)) === null || _f === void 0 ? void 0 : _f[0];\n                sender = anyNameOrEmail || 'Unknown Sender';\n            }\n            // Ensure we have some form of timestamp\n            if (!timestamp || timestamp === '') {\n                // Use current date as fallback\n                var now = new Date();\n                timestamp = now.toLocaleString();\n            }\n            var emailData = {\n                // Create a consistent ID by hashing the subject and sender\n                id: \"\".concat(subject, \"-\").concat(sender).replace(/[^a-zA-Z0-9]/g, ''),\n                subject: subject,\n                sender: sender,\n                timestamp: timestamp\n            };\n            console.log('Final processed email data:', emailData);\n            return emailData;\n        };\n        var emailData = getEmailData();\n        if (emailData) {\n            console.log('Email data extracted:', emailData);\n            showStageSelectionPopup(emailData, e.clientX, e.clientY);\n        }\n        else {\n            console.error('Failed to extract email data');\n        }\n    });\n}\n// Update the showStageSelectionPopup function to properly pass the data\n// Add debug logging to track the flow\nfunction showStageSelectionPopup(emailData, x, y) {\n    var _this = this;\n    console.log('Opening stage selection popup with data:', emailData);\n    var popup = document.createElement('div');\n    popup.className = 'stage-selection-popup';\n    popup.style.cssText = \"\\n        position: fixed;\\n        left: \".concat(x, \"px;\\n        top: \").concat(y, \"px;\\n        background: white;\\n        border-radius: 8px;\\n        box-shadow: 0 2px 10px rgba(0,0,0,0.1);\\n        padding: 8px;\\n        z-index: 10000;\\n    \");\n    chrome.storage.sync.get(['pipelineStages'], function (result) {\n        console.log('Retrieved stages:', result.pipelineStages);\n        var stages = result.pipelineStages || defaultStages;\n        stages.forEach(function (stage) {\n            var option = document.createElement('div');\n            option.style.cssText = \"\\n                padding: 8px 16px;\\n                cursor: pointer;\\n                border-left: 3px solid \".concat(stage.color, \";\\n                margin: 4px 0;\\n            \");\n            option.textContent = stage.name;\n            option.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n                var stageElement;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            stageElement = document.querySelector(\"[data-stage-id=\\\"\".concat(stage.id, \"\\\"]\"));\n                            if (!stageElement) return [3 /*break*/, 2];\n                            return [4 /*yield*/, StorageUtils.saveEmailToStage(emailData, stage.id)];\n                        case 1:\n                            _a.sent();\n                            addEmailToStage(emailData, stage, stageElement);\n                            _a.label = 2;\n                        case 2:\n                            popup.remove();\n                            return [2 /*return*/];\n                    }\n                });\n            }); });\n            popup.appendChild(option);\n        });\n    });\n    document.body.appendChild(popup);\n}\n// Add this function to load saved emails when creating stages\n// Update loadSavedEmails function\n// Update the loadSavedEmails function to use StorageUtils\nfunction loadSavedEmails() {\n    return __awaiter(this, void 0, void 0, function () {\n        var stages, currentStages, _loop_1, _i, currentStages_1, stage, error_4;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 6, , 7]);\n                    return [4 /*yield*/, chrome.storage.sync.get(['pipelineStages'])];\n                case 1:\n                    stages = _a.sent();\n                    currentStages = stages.pipelineStages || defaultStages;\n                    _loop_1 = function (stage) {\n                        var emails, stageElement, countElement, emailsContainer;\n                        return __generator(this, function (_b) {\n                            switch (_b.label) {\n                                case 0: return [4 /*yield*/, StorageUtils.loadStageEmails(stage.id)];\n                                case 1:\n                                    emails = _b.sent();\n                                    stageElement = document.querySelector(\"[data-stage-id=\\\"\".concat(stage.id, \"\\\"]\"));\n                                    if (stageElement) {\n                                        countElement = stageElement.querySelector('.stage-count');\n                                        if (countElement) {\n                                            console.log(\"Count Element Cleared\");\n                                            countElement.textContent = '0';\n                                        }\n                                        emailsContainer = stageElement.querySelector('.stage-emails-container');\n                                        if (emailsContainer) {\n                                            console.log(\"Email Container Cleared\");\n                                            emailsContainer.innerHTML = '';\n                                        }\n                                        // Now add the emails from storage\n                                        emails.forEach(function (email) {\n                                            addEmailToStage(email, stage, stageElement);\n                                        });\n                                    }\n                                    return [2 /*return*/];\n                            }\n                        });\n                    };\n                    _i = 0, currentStages_1 = currentStages;\n                    _a.label = 2;\n                case 2:\n                    if (!(_i < currentStages_1.length)) return [3 /*break*/, 5];\n                    stage = currentStages_1[_i];\n                    return [5 /*yield**/, _loop_1(stage)];\n                case 3:\n                    _a.sent();\n                    _a.label = 4;\n                case 4:\n                    _i++;\n                    return [3 /*break*/, 2];\n                case 5: return [3 /*break*/, 7];\n                case 6:\n                    error_4 = _a.sent();\n                    console.error('Error loading saved emails:', error_4);\n                    return [3 /*break*/, 7];\n                case 7: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction cleanupStorage() {\n    return __awaiter(this, void 0, void 0, function () {\n        var error_5;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 4, , 5]);\n                    // Clear both sync and local storage\n                    return [4 /*yield*/, chrome.storage.sync.clear()];\n                case 1:\n                    // Clear both sync and local storage\n                    _a.sent();\n                    return [4 /*yield*/, chrome.storage.local.clear()];\n                case 2:\n                    _a.sent();\n                    console.log('Storage cleaned successfully');\n                    // Reset to default stages\n                    return [4 /*yield*/, chrome.storage.sync.set({ pipelineStages: defaultStages })];\n                case 3:\n                    // Reset to default stages\n                    _a.sent();\n                    console.log('Default stages restored');\n                    return [3 /*break*/, 5];\n                case 4:\n                    error_5 = _a.sent();\n                    console.error('Error cleaning storage:', error_5);\n                    return [3 /*break*/, 5];\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction observeGmailInbox() {\n    // Prevent multiple initialization\n    if (observerState.isInitialized) {\n        console.log('Observer already initialized, skipping...');\n        return;\n    }\n    console.log('Starting Gmail observer...');\n    function initializeEmailRows() {\n        // Only initialize rows that don't have buttons\n        var emailRows = document.querySelectorAll('tr.zA:not([data-crm-initialized])');\n        if (emailRows.length > 0) {\n            console.log(\"Found \".concat(emailRows.length, \" new email rows to initialize\"));\n            emailRows.forEach(function (row) {\n                if (!row.querySelector('.crm-move-button')) {\n                    makeEmailDraggable(row);\n                    row.setAttribute('data-crm-initialized', 'true');\n                }\n            });\n        }\n    }\n    var findEmailContainer = function () {\n        var targetNode = document.querySelector('.AO, .ain');\n        if (!targetNode) {\n            console.log('Gmail container not found, retrying...');\n            setTimeout(findEmailContainer, 1000);\n            return;\n        }\n        // Only create sidebar once\n        if (!observerState.sidebarCreated) {\n            console.log('Found Gmail container, creating sidebar and observer');\n            createSidebar();\n            observerState.sidebarCreated = true;\n        }\n        var observer = new MutationObserver(function (mutations) {\n            var shouldInitialize = false;\n            mutations.forEach(function (mutation) {\n                if (mutation.addedNodes.length > 0 ||\n                    mutation.type === 'childList') {\n                    shouldInitialize = true;\n                }\n            });\n            if (shouldInitialize) {\n                requestAnimationFrame(function () {\n                    initializeEmailRows();\n                });\n            }\n        });\n        observer.observe(targetNode, {\n            childList: true,\n            subtree: true\n        });\n        // Initial setup\n        requestAnimationFrame(function () {\n            initializeEmailRows();\n        });\n        observerState.isInitialized = true;\n    };\n    findEmailContainer();\n}\n// Add this to your initialization\nwindow.addEventListener('load', function () {\n    console.log('Page loaded, initializing CRM...');\n    // Clean storage before initialization\n    // cleanupStorage().then(() => {\n    //     setTimeout(observeGmailInbox, 1000);\n    // });\n    // Added periodic check to maintain buttons\n    // const maintainButtons = () => {\n    //     const uninitializedRows = document.querySelectorAll('tr.zA:not([data-crm-initialized])');\n    //     if (uninitializedRows.length > 0) {\n    //         uninitializedRows.forEach(row => {\n    //             makeEmailDraggable(row as HTMLElement);\n    //             row.setAttribute('data-crm-initialized', 'true');\n    //         });\n    //     }\n    // };\n    // // Initial setup with delay\n    // setTimeout(observeGmailInbox, 1000);\n    // // Maintain buttons periodically\n    // setInterval(maintainButtons, 2000);\n    // Initial setup with multiple retry attempts for first load\n    var initialSetup = function () {\n        setTimeout(function () {\n            observeGmailInbox();\n            // Specific first-load check for the first 10 rows\n            var checkFirstRows = function () {\n                var firstRows = Array.from(document.querySelectorAll('tr.zA')).slice(0, 10);\n                firstRows.forEach(function (row) {\n                    if (!row.querySelector('.crm-move-button')) {\n                        makeEmailDraggable(row);\n                        row.setAttribute('data-crm-initialized', 'true');\n                    }\n                });\n            };\n            // Multiple checks for the first 10 rows during initial load\n            [100, 500, 1000, 2000].forEach(function (delay) {\n                setTimeout(checkFirstRows, delay);\n            });\n            // Regular backup check continues\n            setInterval(function () {\n                if (!document.querySelector('.crm-move-button')) {\n                    console.log('Buttons missing, reinitializing...');\n                    var rows = document.querySelectorAll('tr.zA:not([data-crm-initialized])');\n                    rows.forEach(function (row) {\n                        makeEmailDraggable(row);\n                        row.setAttribute('data-crm-initialized', 'true');\n                    });\n                }\n            }, 5000);\n        }, 1000);\n    };\n    initialSetup();\n});\nvar init = function () {\n    if (!window.location.origin.includes(GMAIL_URL_PATTERN)) {\n        return;\n    }\n    console.log('Gmail detected, starting observer');\n    observeGmailInbox();\n};\n// Start when page loads\nwindow.addEventListener('load', init);\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/content.tsx\"]();\n",""],"names":[],"sourceRoot":""}